importScripts("serviceworker-cache-polyfill.min.js");var CACHE_VERSION=1356730;var CURRENT_CACHES={"read-through":"read-through-cache-v"+CACHE_VERSION,prefetch:"prefetch-cache-v"+CACHE_VERSION};self.addEventListener("install",function(event){var urlsToPrefetch=["./","./index.html","./style.css","./serviceworker-cache-polyfill.min.js","./worker.min.js","./fonts/fontello.woff","./favicon.ico","./js/utils/worker.min.js","./dist/app.min.js","./dist/worker-addons.min.js"];console.log("Handling install event. Resources to pre-fetch:",urlsToPrefetch);event.waitUntil(caches.open(CURRENT_CACHES["prefetch"]).then(function(cache){return cache.addAll(urlsToPrefetch.map(function(urlToPrefetch){return new Request(urlToPrefetch,{mode:"no-cors"})})).then(function(){console.log("All resources have been fetched and cached.")})}).catch(function(error){console.error("Pre-fetching failed:",error)}))});self.addEventListener("activate",function(event){var expectedCacheNames=Object.keys(CURRENT_CACHES).map(function(key){return CURRENT_CACHES[key]});event.waitUntil(caches.keys().then(function(cacheNames){return Promise.all(cacheNames.map(function(cacheName){if(expectedCacheNames.indexOf(cacheName)==-1){console.log("Deleting out of date cache:",cacheName);return caches.delete(cacheName)}}))}))});self.addEventListener("fetch",function(event){console.log("Handling fetch event for",event.request.url);event.respondWith(caches.match(event.request).then(function(response){if(response){console.log(" Found response in cache:",response);return response}else{if(event.request.url.match(/https:\/\/offline.audio\//)){return fetch("https://offline.audio/")}else if(event.request.url.match(/http:\/\/localhost:3000\/.+/)){return caches.match("/index.html")}else{console.log(" No response for %s found in cache. About to fetch from network...",event.request.url);return fetch(event.request.clone()).then(function(response){console.log("  Response for %s from network is: %O",event.request.url,response);if(response.status<400){var responseClone=response.clone();caches.open(CURRENT_CACHES["read-through"]).then(function(cache){cache.put(event.request,responseClone)})}return response})}}}).catch(function(error){console.error("  Read-through caching failed:",error);throw error}))});